package com.anykey.balala.activity;import android.content.Intent;import android.os.Bundle;import android.os.Handler;import android.os.StrictMode;import android.support.v4.content.LocalBroadcastManager;import android.view.View;import android.widget.Button;import android.widget.TextView;import com.android.volley.Request;import com.android.volley.VolleyError;import com.anykey.balala.AppBalala;import com.anykey.balala.CommonUrlConfig;import com.anykey.balala.R;import com.anykey.balala.Utils.MapUtil;import com.anykey.balala.model.BaseUserInfo;import com.anykey.balala.model.CommonListResult;import com.anykey.balala.model.LoginParam;import com.anykey.balala.receiver.AppBroadcastReceiver;import com.anykey.balala.service.BackgroundService;import com.facebook.AccessToken;import com.facebook.CallbackManager;import com.facebook.FacebookCallback;import com.facebook.FacebookException;import com.facebook.GraphRequest;import com.facebook.GraphResponse;import com.facebook.HttpMethod;import com.facebook.Profile;import com.facebook.ProfileTracker;import com.facebook.appevents.AppEventsLogger;import com.facebook.login.LoginBehavior;import com.facebook.login.LoginResult;import com.facebook.login.widget.LoginButton;import com.google.gson.reflect.TypeToken;import net.dev.mylib.DebugLogs;import net.dev.mylib.Encryption;import net.dev.mylib.JsonUtil;import net.dev.mylib.ToastUtils;import net.dev.mylib.cache.sharedPreferences.SharedPreferencesUtil;import net.dev.mylib.netWorkUtil.GetJson;import net.dev.mylib.netWorkUtil.getCode;import java.util.HashMap;/** * Created by xujian on 15/8/26. * Facebook登陆 */public class LoginActivity extends BaseActivity {    private CallbackManager callbackManager;    private ProfileTracker profileTracker;    private Button btn_NewUser;    private Button btn_EmailRegister;    private TextView txt_fb_login;    private SharedPreferencesUtil sp;    private int maxRequest = 5 ;    public static LoginActivity instance = null;    private boolean isHttp = false;    @Override    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        sp = SharedPreferencesUtil.getInstance(mContext);        callbackManager = CallbackManager.Factory.create();//创建回调工厂        setContentView(R.layout.activity_login);        if (android.os.Build.VERSION.SDK_INT > 9) {            StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();            StrictMode.setThreadPolicy(policy);        }        LoginButton loginButton = (LoginButton) findViewById(R.id.facebook_login);        txt_fb_login = (TextView) findViewById(R.id.txt_fb_login);        loginButton.setLoginBehavior(LoginBehavior.NATIVE_WITH_FALLBACK);        //登陆成功以后回调        loginButton.setReadPermissions("user_friends", "email", "public_profile");        loginButton.registerCallback(callbackManager, new FacebookCallback<LoginResult>() {            @Override            public void onSuccess(LoginResult loginResult) {                updateUI();            }            @Override            public void onCancel() {            }            @Override            public void onError(FacebookException error) {                ToastUtils.showToast(LoginActivity.this,"Facebook key error");            }        });        //刷新获取个人用户资料        profileTracker = new ProfileTracker() {            @Override            protected void onCurrentProfileChanged(Profile oldProfile, Profile currentProfile) {                updateUI();                //It`s possible that we were waiting for Profile to be populated in order to post a status update.            }        };        btn_NewUser = (Button) findViewById(R.id.btn_NewUser);        btn_NewUser.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Intent newUserIntent = new Intent(LoginActivity.this, NewUserActivity.class);                startActivity(newUserIntent);                finish();            }        });        btn_EmailRegister = (Button) findViewById(R.id.btn_email_register);        btn_EmailRegister.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Intent newUserIntent = new Intent(LoginActivity.this, GoLoginActivity.class);                startActivity(newUserIntent);                finish();            }        });        instance = this;    }    /**     * Ui界面刷新     */    private void updateUI() {        boolean enableButton = AccessToken.getCurrentAccessToken() != null;        Profile profile = Profile.getCurrentProfile();//获取登陆成功以后的数据        if (enableButton && profile != null && !isHttp) {            txt_fb_login.setText(profile.getName());            maxRequest = 5;            Response(profile);        } else {            DebugLogs.e("获取信息失败");        }    }    /**     * 获取返回结果并且保存用户信息     */    private void Response(final Profile profiles) {        isHttp = true;        HashMap<String, String> params = new HashMap<>();        params.put("sid", profiles.getId());        params.put("Deviceid", AppBalala.getDeviceId);        params.put("nickname", Encryption.utf8ToUnicode(profiles.getName().toString()));        params.put("headurl", profiles.getProfilePictureUri(100, 100).toString());        params.put("Source", "2");        GetJson.Callback callback = new GetJson.Callback() {            @Override            public void onFinish(String response) {                DebugLogs.e("获取返回结果" + response);                if (response != null) {                    CommonListResult<BaseUserInfo> results = JsonUtil.fromJson(response, new TypeToken<CommonListResult<BaseUserInfo>>() {                    }.getType());                    if (results != null && results.hasData()) {                        getFriendsList();                        String token = results.data.get(0).Token;                        String userid = results.data.get(0).Userid;                        String userlevel = results.data.get(0).userlevel;                        String uname = results.data.get(0).nickname;                        String PictureUri = results.data.get(0).headurl;                        sp.saveLoginInfo(true, token, userid, uname, PictureUri, userlevel);                        LoginParam param = new LoginParam();                        param.sign = token;                        param.id = Long.valueOf(userid);                        Intent i = new Intent();                        i.setAction(BackgroundService.CMD_LOGIN_IM_ACTION);                        i.putExtra(BackgroundService.KEY_LOGIN_PARAM,param);                        sendBroadcast(i);                        AppBalala.isSound = sp.getBoolean("isSound",true);                        Intent intent = new Intent(LoginActivity.this, MainActivity.class);                        startActivity(intent);                        finish();                    }                }            }            @Override            public void onError(VolleyError error) {                isHttp = false;                getCode.hasCode errorCode = ((getCode.hasCode)error);                String strCode = errorCode.errorCode;                if (strCode.equals(CommonUrlConfig.RequestState.Logout)){                    Intent voiceIntent = new Intent();                    voiceIntent.setAction(AppBroadcastReceiver.BROADCAST_USER_LOGOUT);                    LocalBroadcastManager.getInstance(mContext).sendBroadcast(voiceIntent);                }else{                    if(maxRequest >0) {                        new Handler().postDelayed(new Runnable() {                            @Override                            public void run() {                                runOnUiThread(new Runnable() {                                    @Override                                    public void run() {                                        Response(Profile.getCurrentProfile());                                    }                                });                            }                        }, 5000);                        maxRequest --;                    }                    ToastUtils.showToast(LoginActivity.this,  MapUtil.getString(mContext, strCode));                }            }        };        GetJson getJson = new GetJson(this, callback, true, getString(R.string.loading));        getJson.setConnection(Request.Method.GET, CommonUrlConfig.facebookRegister, params);    }    /**     * 获取朋友列表     */    private void getFriendsList() {        new GraphRequest(                AccessToken.getCurrentAccessToken(),                "/me/friendlists",                null,                HttpMethod.GET,                new GraphRequest.Callback() {                    public void onCompleted(GraphResponse response) {                        DebugLogs.e("获取我的好友列表" + response.toString());                    }                }        ).executeAsync();    }    //接受回调    @Override    protected void onActivityResult(int requestCode, int resultCode, Intent data) {        super.onActivityResult(requestCode, resultCode, data);        callbackManager.onActivityResult(requestCode, resultCode, data);    }    @Override    protected void onResume() {        super.onResume();        AppEventsLogger.activateApp(this);    }    @Override    protected void onPause() {        super.onPause();        AppEventsLogger.deactivateApp(this);    }    @Override    protected void onDestroy() {        super.onDestroy();        profileTracker.stopTracking();    }}